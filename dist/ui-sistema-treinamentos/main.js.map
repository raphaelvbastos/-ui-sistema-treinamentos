{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/modelos/usuariomodel.ts","webpack:///./src/app/paginas/confirmacao/confirmacao.component.css","webpack:///./src/app/paginas/confirmacao/confirmacao.component.html","webpack:///./src/app/paginas/confirmacao/confirmacao.component.ts","webpack:///./src/app/paginas/login/login.component.css","webpack:///./src/app/paginas/login/login.component.html","webpack:///./src/app/paginas/login/login.component.ts","webpack:///./src/app/paginas/menu/menu.component.css","webpack:///./src/app/paginas/menu/menu.component.html","webpack:///./src/app/paginas/menu/menu.component.ts","webpack:///./src/app/paginas/pagina-curso/pagina-curso.component.css","webpack:///./src/app/paginas/pagina-curso/pagina-curso.component.html","webpack:///./src/app/paginas/pagina-curso/pagina-curso.component.ts","webpack:///./src/app/paginas/pagina-cursos/pagina-cursos.component.css","webpack:///./src/app/paginas/pagina-cursos/pagina-cursos.component.html","webpack:///./src/app/paginas/pagina-cursos/pagina-cursos.component.ts","webpack:///./src/app/paginas/painel/painel.component.css","webpack:///./src/app/paginas/painel/painel.component.html","webpack:///./src/app/paginas/painel/painel.component.ts","webpack:///./src/app/paginas/tabela/tabela-datasource.ts","webpack:///./src/app/paginas/tabela/tabela.component.css","webpack:///./src/app/paginas/tabela/tabela.component.html","webpack:///./src/app/paginas/tabela/tabela.component.ts","webpack:///./src/app/paginas/usuario/usuario.component.css","webpack:///./src/app/paginas/usuario/usuario.component.html","webpack:///./src/app/paginas/usuario/usuario.component.ts","webpack:///./src/app/paginas/usuarios/usuarios-datasource.ts","webpack:///./src/app/paginas/usuarios/usuarios.component.css","webpack:///./src/app/paginas/usuarios/usuarios.component.html","webpack:///./src/app/paginas/usuarios/usuarios.component.ts","webpack:///./src/app/rotas/rotas.module.ts","webpack:///./src/app/servicos/autenticacao.service.ts","webpack:///./src/app/servicos/servico-cursos.service.ts","webpack:///./src/app/servicos/usuarios.service.ts","webpack:///./src/app/servicos/usuariotipo.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<menu></menu>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MenuComponent } from './paginas/menu/menu.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule, MatCardModule, MatMenuModule, MatTableModule, MatPaginatorModule, MatSortModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatDialog, MatDialogModule } from '@angular/material';\nimport { PainelComponent } from './paginas/painel/painel.component';\nimport { TabelaComponent } from './paginas/tabela/tabela.component';\nimport { PaginaCursosComponent } from './paginas/pagina-cursos/pagina-cursos.component';\nimport { PaginaCursoComponent } from './paginas/pagina-curso/pagina-curso.component';\nimport { RotasModule } from './rotas/rotas.module';\nimport { LoginComponent } from './paginas/login/login.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { UsuariosComponent } from './paginas/usuarios/usuarios.component';\nimport { UsuarioComponent } from './paginas/usuario/usuario.component';\nimport { ConfirmacaoComponent } from './paginas/confirmacao/confirmacao.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    PainelComponent,\n    TabelaComponent,\n    PaginaCursosComponent,\n    PaginaCursoComponent,\n    LoginComponent,\n    UsuariosComponent,\n    UsuarioComponent,\n    ConfirmacaoComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    RotasModule,\n    HttpModule,\n    HttpClientModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDialogModule,\n    FlexLayoutModule\n  ],\n  entryComponents: [\n    ConfirmacaoComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { UsuarioTipo } from './usuariotipomodel';\n\nexport class Usuario {\n    nome: string;\n    email: string;\n    senha: string;\n    tipo: UsuarioTipo;\n\n    constructor() {}\n}","module.exports = \"\"","module.exports = \"<div mat-dialog-content>\\n  {{message}}\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Não</button>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Sim</button>\\n</div>\"","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-confirmacao',\n  templateUrl: './confirmacao.component.html',\n  styleUrls: ['./confirmacao.component.css']\n})\n\nexport class ConfirmacaoComponent {\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmacaoComponent>,\n    \n@Inject(MAT_DIALOG_DATA) public message: string) { }\nonNoClick(): void {\n    this.dialogRef.close();\n  }\n}","module.exports = \"\"","module.exports = \"<!-- <mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Login</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form class=\\\"example-form\\\">\\n      <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n        <tr>\\n          <td>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"EMail\\\" [(ngModel)]=\\\"usuario.email\\\" name=\\\"email\\\" required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"usuario.senha\\\" type=\\\"password\\\" name=\\\"senha\\\" required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n      </table>\\n    </form>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"showMsg\\\">\\n      <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n        <i class=\\\"material-icons\\\">error</i> Email ou senha inválidos\\n      </div>\\n    </div>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\n  </mat-card-actions>\\n</mat-card> -->\\n\\n\\n<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\n  <!-- column -->\\n  <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card style=\\\"box-shadow: none\\\">\\n      <mat-card-content>\\n        <!-- Row -->\\n        <div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\n          <!-- column -->\\n          <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <div class=\\\"contains\\\">\\n              <div class=\\\"login-box\\\">\\n                <mat-card class=\\\"mat-elevation-z2\\\" style=\\\"background-color: #26C6DA\\\">\\n                  <mat-card-header style=\\\"background-color: #26C6DA; font-weight: bold; color: #212c3d;font-size: 2em;text-align: center\\\">Login</mat-card-header>\\n                  <mat-card-content>\\n                    <form class=\\\"form my-2 my-lg-0\\\">\\n                      <mat-form-field class=\\\"inputLogin\\\">\\n                        <input matInput placeholder=\\\"E-mail\\\" [(ngModel)]=\\\"usuario.email\\\" name=\\\"email\\\" required>\\n                      </mat-form-field>\\n                      <mat-form-field class=\\\"inputLogin\\\">\\n                        <input matInput placeholder=\\\"Senha\\\" [(ngModel)]=\\\"usuario.senha\\\" type=\\\"password\\\" name=\\\"senha\\\"\\n                          required>\\n                      </mat-form-field>\\n                      <mat-card-actions>\\n                        <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\" class=\\\"btnLogin\\\">Login</button>\\n                      </mat-card-actions>\\n                    </form>\\n\\n                    <div class=\\\"row\\\" *ngIf=\\\"showMsg\\\">\\n                      <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                        <i class=\\\"material-icons\\\">error</i> Email ou senha inválidos\\n                      </div>\\n                    </div>\\n\\n                  </mat-card-content>\\n                </mat-card>\\n              </div>\\n\\n            </div>\\n            <br /><br />\\n          </div>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- column -->\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AutenticacaoService } from '../../servicos/autenticacao.service';\nimport { Router } from '@angular/router';\nimport { Usuario } from '../../modelos/usuariomodel';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  usuario = new Usuario();\n  showMsg: boolean = false;\n\n  constructor(public as: AutenticacaoService, public router: Router) { }\n\n  ngOnInit() {    \n  }\n\n  login() {\n    this.as.login(this.usuario).subscribe(result => {\n      if(result != null) {\n\n       this.as.usuarioLogado.subscribe(users => this.usuario = users);\n        \n        this.router.navigate([\"/cursos\"]);\n      } else {\n        this.showMsg = true;\n      }\n      // if (result.success) {\n      //   this.goTo('home');\n      // }\n    });\n    // console.log(this.usuario.email);\n    // console.log(this.usuario.senha);\n  }\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\n}\\n\"","module.exports = \"<!-- <mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item href=\\\"/cursos\\\">Cursos</a>\\n      <a mat-list-item href=\\\"/curso\\\">Curso</a>\\n      <a *ngIf=\\\"usuarioIniciado(usuario)\\\" mat-list-item href=\\\"#\\\">Link 3</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Sistema de Treinamentos</span>\\n      <div style=\\\"color: #fff;position: absolute;right: 10px;\\\">\\n        <a *ngIf=\\\"usuarioIniciado(usuario)\\\" (click)=\\\"logoff()\\\" title=\\\"Sair\\\">\\n          <i class=\\\"material-icons md-48\\\">exit_to_app</i>\\n        </a>\\n      </div>\\n    </mat-toolbar>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container> -->\\n\\n\\n<div style=\\\"height: 80vh;\\\">\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <button mat-icon-button (click)=\\\"sidenav.toggle()\\\" fxShow=\\\"true\\\" fxHide.gt-sm>\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n      <span>Responsive Navigation</span>\\n      <span class=\\\"menu-spacer\\\"></span>\\n      <div fxShow=\\\"true\\\" fxHide.lt-md>\\n        <!-- The following menu items will be hidden on both SM and XS screen sizes -->\\n        <a href=\\\"/usuarios\\\" mat-button>\\n          <i class=\\\"material-icons md-48\\\">account_circle</i> Usuários\\n        </a>\\n\\n        <a href=\\\"/cursos\\\" mat-button>\\n          <i class=\\\"material-icons md-48\\\">school</i> Cursos\\n        </a>\\n\\n        <a style=\\\"position:fixed;right:10px;\\\" *ngIf=\\\"usuarioIniciado(usuario)\\\" (click)=\\\"logoff()\\\" title=\\\"Sair\\\">\\n          <i class=\\\"material-icons md-48\\\">exit_to_app</i>\\n        </a>\\n      </div>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n\\n  <mat-sidenav-container fxFlexFill>\\n    <mat-sidenav #sidenav class=\\\"sidenav\\\">\\n      <mat-nav-list>\\n        <a (click)=\\\"sidenav.toggle()\\\" href=\\\"\\\" mat-list-item><i class=\\\"material-icons md-48\\\">close</i></a>\\n        <a href=\\\"#\\\" mat-list-item>Menu Item 1</a>\\n        <a href=\\\"#\\\" mat-list-item>Menu Item 2</a>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content fxFlexFill>\\n      <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AutenticacaoService } from 'src/app/servicos/autenticacao.service';\nimport { Usuario } from '../../modelos/usuariomodel';\n\n@Component({\n  selector: 'menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  usuario = new Usuario();\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, public as: AutenticacaoService) { \n  }\n\n  ngOnInit() {\n    this.as.usuarioLogado.subscribe(users => this.usuario = users);\n  }\n\n  usuarioIniciado(usuario: Usuario): boolean {\n    if(usuario != null && typeof usuario.email != \"undefined\") {\n      return true;\n    }\n    return false;\n  }\n\n  logoff(): any {\n    this.as.encerrarSessao();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- <p>\\n  {{curso | json}}\\n</p> -->\\n\\n\\n<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>\\n      <h1>{{curso.titulo}}</h1>\\n    </mat-card-title>\\n    <mat-card-subtitle>\\n      <h2>Instrutor: {{curso.instrutor.nome}}</h2>\\n    </mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n\\n    <mat-card class=\\\"example-card\\\" *ngFor=\\\"let u of curso.unidades\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n        <mat-card-title>\\n          <h3>{{u.titulo}}</h3>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n\\n        <mat-card class=\\\"example-card\\\">\\n          <mat-card-header>\\n            <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n            <mat-card-title>\\n              <h4>Videos</h4>\\n            </mat-card-title>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <mat-nav-list>\\n              <a mat-list-item  *ngFor=\\\"let v of u.videos\\\" (click)=teste(u)> {{v.titulo}} </a>\\n            </mat-nav-list>\\n          </mat-card-content>\\n        </mat-card>\\n\\n\\n        <mat-card class=\\\"example-card\\\">\\n          <mat-card-header>\\n            <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n            <mat-card-title>\\n              <h4>Arquivos</h4>\\n            </mat-card-title>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <mat-nav-list>\\n              <a mat-list-item href=\\\"/arquivos/{{v.link}}\\\" target=\\\"_blank\\\" *ngFor=\\\"let v of u.arquivos\\\"> {{v.titulo}} </a>\\n            </mat-nav-list>\\n          </mat-card-content>\\n        </mat-card>\\n\\n\\n        <mat-card class=\\\"example-card\\\">\\n            <mat-card-header>\\n              <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n              <mat-card-title>\\n                <h4>Questionários</h4>\\n              </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n              <mat-nav-list>\\n                <a mat-list-item routerLink=\\\"/unidades/{{u._id}}\\\" *ngFor=\\\"let v of u.questionarios\\\"> {{v.titulo}} </a>\\n              </mat-nav-list>\\n            </mat-card-content>\\n          </mat-card>\\n\\n      </mat-card-content>\\n    </mat-card>\\n\\n\\n\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button>LIKE</button>\\n    <button mat-button>SHARE</button>\\n  </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { ServicoCursosService } from '../../servicos/servico-cursos.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-pagina-curso',\n  templateUrl: './pagina-curso.component.html',\n  styleUrls: ['./pagina-curso.component.css']\n})\nexport class PaginaCursoComponent implements OnInit {\n\n  curso: any;\n    constructor( public ps: ServicoCursosService, \n                 public rs: ActivatedRoute) {\n        const id = this.rs.snapshot.paramMap.get(\"id\");\n\n        ps.getCurso(id).subscribe(\n          (dados:any) => {\n            this.curso = dados;\n          }\n        );\n    }\n\n    teste(elem) {\n      console.log(elem);\n    }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>Andrômeda</mat-card-title>\\n    <mat-card-subtitle>Galáxias</mat-card-subtitle>\\n  </mat-card-header>\\n  <!-- <img mat-card-image src=\\\"http://www.macoratti.net/Imagens/andromeda.jpg\\\" alt=\\\"Andromeda\\\"> -->\\n  <mat-card-content>\\n      <mat-nav-list>\\n          <a mat-list-item routerLink=\\\"/cursos/{{p._id}}\\\" *ngFor=\\\"let p of cursos\\\"> {{p.titulo}} </a>\\n       </mat-nav-list>\\n    <p>\\n      <!-- {{cursos | json}} -->\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button>Gostei</button>\\n    <button mat-button>Compartilhe</button>\\n  </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { ServicoCursosService } from '../../servicos/servico-cursos.service'\nimport { AutenticacaoService } from 'src/app/servicos/autenticacao.service';\n\n@Component({\n  selector: 'app-pagina-cursos',\n  templateUrl: './pagina-cursos.component.html',\n  styleUrls: ['./pagina-cursos.component.css']\n})\nexport class PaginaCursosComponent implements OnInit {\n  cursos: any[];\n  constructor(public ps: ServicoCursosService, public as: AutenticacaoService) {\n\n    this.as.canActivate();\n    // this.projetos = ps.getProjetos();\n    ps.getCursos().subscribe(\n      (dados: any[]) => {\n        this.cursos = dados;\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".grid-container {\\n  margin: 20px;\\n}\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content {\\n  text-align: center;\\n}\"","module.exports = \"<div class=\\\"grid-container\\\">\\n  <h1 class=\\\"mat-h1\\\">Dashboard</h1>\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n    <mat-grid-tile *ngFor=\\\"let card of cards\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            {{card.title}}\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'painel',\n  templateUrl: './painel.component.html',\n  styleUrls: ['./painel.component.css']\n})\nexport class PainelComponent {\n  cards = [\n    { title: 'Card 1', cols: 2, rows: 1 },\n    { title: 'Card 2', cols: 1, rows: 1 },\n    { title: 'Card 3', cols: 1, rows: 2 },\n    { title: 'Card 4', cols: 1, rows: 1 }\n  ];\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface TabelaItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: TabelaItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the Tabela view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class TabelaDataSource extends DataSource<TabelaItem> {\n  data: TabelaItem[] = EXAMPLE_DATA;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<TabelaItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginators length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: TabelaItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: TabelaItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</mat-cell>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n\\n  <mat-paginator #paginator\\n    [length]=\\\"dataSource.data.length\\\"\\n    [pageIndex]=\\\"0\\\"\\n    [pageSize]=\\\"50\\\"\\n    [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { TabelaDataSource } from './tabela-datasource';\n\n@Component({\n  selector: 'tabela',\n  templateUrl: './tabela.component.html',\n  styleUrls: ['./tabela.component.css']\n})\nexport class TabelaComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: TabelaDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new TabelaDataSource(this.paginator, this.sort);\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-card>\\n  <div class=\\\"mat-elevation-z8\\\">\\n      <form class=\\\"form my-2 my-lg-0\\\">\\n          <mat-form-field class=\\\"inputFormulario\\\">\\n              <input matInput placeholder=\\\"Nome\\\" [(ngModel)]=\\\"usuario.nome\\\" name=\\\"nome\\\" required>\\n            </mat-form-field>\\n\\n          <mat-form-field class=\\\"inputFormulario\\\">\\n            <input matInput placeholder=\\\"E-mail\\\" [(ngModel)]=\\\"usuario.email\\\" name=\\\"email\\\" required>\\n          </mat-form-field>\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" [hidden]=\\\"emailDuplicado()\\\">\\n              <i class=\\\"material-icons\\\">error</i> Email já cadastrado\\n            </div>\\n\\n          <mat-form-field class=\\\"inputFormulario\\\">\\n            <input matInput placeholder=\\\"Senha\\\" [(ngModel)]=\\\"usuario.senha\\\" type=\\\"password\\\" name=\\\"senha\\\"\\n              required>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"inputFormulario\\\">\\n              <mat-label>Perfil</mat-label>\\n              <mat-select required [(ngModel)]=\\\"usuario.tipo\\\" name=\\\"perfil\\\" [compareWith]=\\\"compareById\\\">\\n                <mat-option *ngFor=\\\"let t of tipoUsuario\\\" [value]=\\\"t\\\">\\n                  {{t.tipo}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n          <mat-card-actions>\\n            <a mat-raised-button  color=\\\"primary\\\" class=\\\"voltar\\\" href=\\\"/usuarios\\\">Voltar</a>\\n            <button mat-raised-button color=\\\"primary\\\" class=\\\"salvar\\\" (click)=\\\"salvar()\\\">Salvar</button>\\n          </mat-card-actions>\\n        </form>\\n  </div>\\n</mat-card>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Usuario } from 'src/app/modelos/usuariomodel';\n\nimport { UsuariosService } from 'src/app/servicos/usuarios.service';\nimport { UsuariotipoService } from 'src/app/servicos/usuariotipo.service';\nimport { UsuarioTipo } from 'src/app/modelos/usuariotipomodel';\nimport { Router } from '@angular/router';\nimport { AutenticacaoService } from 'src/app/servicos/autenticacao.service';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  usuario = new Usuario();\n  tipoUsuario = [];\n\n  constructor(public us: UsuariosService, public ut: UsuariotipoService, public router: Router, public as: AutenticacaoService) {\n    this.usuario = new Usuario();\n    this.ut.getTiposUsuario().subscribe((dados: any[]) => {\n      this.tipoUsuario = dados;\n    });\n  }\n\n  ngOnInit() {\n    if (this.us.getUsuarioSelecionado() != null) {\n      this.usuario = this.us.getUsuarioSelecionado();\n    }\n  }\n\n  compareById(f1: any, f2: any): boolean {\n    return f1 && f2 && f1._id === f2._id;\n  }\n\n  emailDuplicado() {\n    // console.log(this.usuario.email);\n    // this.usuario.email = \"\";\n    return true;\n  }\n\n  ehAdministrador() {\n    if(this.as.getUsuario() != null) {\n      if(this.as.getUsuario().tipo.tipo == \"Administrador\") {\n        return true;\n      }\n      return false;\n    } else {\n      return false;\n    }\n  }\n\n  salvar() {\n    if(Object.keys(this.usuario).indexOf(\"_id\") == -1) {\n      this.us.incluirUsuario(this.usuario).subscribe(\n        (dados) => {\n          this.router.navigate([\"/usuarios\"]);\n        });\n    } else {\n      this.us.atualizarUsuario(this.usuario).subscribe(\n        (dados) => {\n          this.router.navigate([\"/usuarios\"]);\n        });\n    }\n  }\n\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { UsuariosService } from 'src/app/servicos/usuarios.service';\nimport { OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/modelos/usuariomodel';\n\n// TODO: Replace this with your own data model type\nexport interface UsuariosItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: any[] = [\n  { id: 1, name: 'Hydrogen' },\n  { id: 2, name: 'Helium' },\n  { id: 3, name: 'Lithium' },\n  { id: 4, name: 'Beryllium' },\n  { id: 5, name: 'Boron' },\n  { id: 6, name: 'Carbon' },\n  { id: 7, name: 'Nitrogen' },\n  { id: 8, name: 'Oxygen' },\n  { id: 9, name: 'Fluorine' },\n  { id: 10, name: 'Neon' },\n  { id: 11, name: 'Sodium' },\n  { id: 12, name: 'Magnesium' },\n  { id: 13, name: 'Aluminum' },\n  { id: 14, name: 'Silicon' },\n  { id: 15, name: 'Phosphorus' },\n  { id: 16, name: 'Sulfur' },\n  { id: 17, name: 'Chlorine' },\n  { id: 18, name: 'Argon' },\n  { id: 19, name: 'Potassium' },\n  { id: 20, name: 'Calcium' },\n];\n\nconst teste: any[] = [\n  { \"_id\": \"5d0a27e65429030004ce4f3b\", \"nome\": \"Administrador do Sistema\", \"email\": \"adm@gmail.com\", \"senha\": \"$2a$10$U8g18cixO412LjKpZ1JVZ.Kt70NukXqiU17wlY03wxCP48xXAU/4q\", \"tipo\": [{ \"_id\": \"5d0a27e65429030004ce4f39\", \"tipo\": \"Administrador\" }], \"__v\": 0 }, { \"_id\": \"5d0a27e65429030004ce4f3d\", \"nome\": \"Lucas das Pontes\", \"email\": \"lucaspontes@gmail.com\", \"senha\": \"abcdef\", \"tipo\": [{ \"_id\": \"5d0a27e65429030004ce4f3a\", \"tipo\": \"Empregado\" }], \"__v\": 0 }, { \"_id\": \"5d0d86351c9d440000ddd69d\", \"nome\": \"MODIFICADO 1\", \"email\": \"MODIFICADO1@gmail.com\", \"senha\": \"MOD1\", \"tipo\": [{ \"_id\": \"5d0a27e65429030004ce4f39\", \"tipo\": \"Administrador\" }], \"__v\": 0 }, { \"_id\": \"5d0ad417f703e91ef73571ec\", \"nome\": \"Roberval de almeida\", \"email\": \"roberval@gmail.com\", \"senha\": \"123456\", \"tipo\": [{ \"_id\": \"5d0a27e65429030004ce4f3a\", \"tipo\": \"Empregado\" }], \"__v\": 0 }]\n\n\n\n\n/**\n * Data source for the Usuarios view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class UsuariosDataSource extends DataSource<any> implements OnInit {\n  data: any[];\n\n  constructor(private paginator: MatPaginator, private sort: MatSort, public us: UsuariosService) {\n    super();\n  }\n\n  ngOnInit() {\n    // this.data = [];\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<any[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    this.paginator.length = this.data.length;\n    \n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() { }\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: UsuariosItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: any[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.nome, b.nome, isAsc);\n        case 'id': return compare(+a._id, +b._id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"\"","module.exports = \"<mat-card>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"nome\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nome</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">{{row.nome}}</mat-cell>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"email\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">{{row.email}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"tipo\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Tipo</mat-header-cell>\\n      <!-- <mat-cell *matCellDef=\\\"let row\\\">\\n        <span *ngFor=\\\"let r of row.tipo\\\">{{r.tipo}}</span>\\n      </mat-cell> -->\\n      <mat-cell *matCellDef=\\\"let row\\\">{{mostrarTipo(row.tipo)}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"editar\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header></mat-header-cell>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> \\n        <a (click)=\\\"editar(row)\\\"><i class=\\\"material-icons md-48 btnCRUD\\\" title=\\\"Editar\\\">edit</i></a> \\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"excluir\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header></mat-header-cell>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> \\n        <a (click)=\\\"openDialog(row)\\\" style=\\\"margin-left: 30px;\\\" class=\\\"btnCRUD\\\" title=\\\"Excluir\\\"><i class=\\\"material-icons md-48\\\">delete</i></a>\\n      </td>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n\\n  <mat-paginator #paginator\\n    [length]=\\\"dataSource?.data?.length\\\"\\n    [pageIndex]=\\\"0\\\"\\n    [pageSize]=\\\"50\\\"\\n    [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\\n</mat-card>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatDialog } from '@angular/material';\nimport { UsuariosDataSource } from './usuarios-datasource';\nimport { UsuariosService } from 'src/app/servicos/usuarios.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Usuario } from 'src/app/modelos/usuariomodel';\nimport { UsuarioTipo } from 'src/app/modelos/usuariotipomodel';\nimport { ConfirmacaoComponent } from '../confirmacao/confirmacao.component';\n\n@Component({\n  selector: 'usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css']\n})\nexport class UsuariosComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: UsuariosDataSource;\n\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['nome', 'email', 'tipo', 'editar', 'excluir'];\n\n  constructor(public us: UsuariosService, public router: Router, public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.us.getUsuarios().subscribe(\n      (dados: any[]) => {\n        this.dataSource = new UsuariosDataSource(this.paginator, this.sort, this.us);\n        this.dataSource.data = dados;\n      }\n    );\n  }\n\n  openDialog(objeto: any): void {\n    const dialogRef = this.dialog.open(ConfirmacaoComponent, {\n      width: '300px',\n      data: \"Tem certeza que deseja excluir?\"\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.excluir(objeto);\n      }\n    });\n  }\n\n  atualizar() {\n    this.us.getUsuarios().subscribe(\n      (dados: any[]) => {\n        this.dataSource = new UsuariosDataSource(this.paginator, this.sort, this.us);\n        this.dataSource.data = dados;\n      }\n    );\n  }\n\n  mostrarTipo(objeto: UsuarioTipo) {\n    if (typeof objeto != \"undefined\") {\n      return objeto.tipo;\n    }\n\n    return \"-\";\n  }\n\n  editar(objeto: any) {\n    this.us.setUsuarioSelecionado(objeto);\n    this.router.navigate([\"/usuario\"]);\n  }\n\n  excluir(objeto: any) {\n    this.us.setUsuarioSelecionado(objeto);\n    this.us.excluirUsuario(objeto).subscribe(\n      (dados) => {\n        this.atualizar();\n      });\n  }\n\n  // objetoParaString(objeto) {\n  //   this.us.setUsuarioSelecionado(objeto);\n  //   return JSON.stringify(objeto);\n  // }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Router, Routes } from \"@angular/router\";\nimport { PaginaCursoComponent } from '../paginas/pagina-curso/pagina-curso.component';\nimport { PaginaCursosComponent } from '../paginas/pagina-cursos/pagina-cursos.component';\nimport { LoginComponent } from '../paginas/login/login.component';\nimport { UsuariosComponent } from '../paginas/usuarios/usuarios.component';\nimport { UsuarioComponent } from '../paginas/usuario/usuario.component';\n\nconst rotas: Routes = [\n  { path: \"cursos\", component: PaginaCursosComponent },\n  { path: \"cursos/:id\", component: PaginaCursoComponent },\n  { path: \"\", component: LoginComponent },\n  { path: \"login\", component: LoginComponent },\n  { path: \"usuarios\", component: UsuariosComponent },\n  { path: \"usuario\", component: UsuarioComponent },\n]\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(rotas)\n  ],\n  exports: [RouterModule],\n  declarations: []\n})\n\nexport class RotasModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/internal/operators';\nimport { Router } from '@angular/router';\nimport { Usuario } from '../modelos/usuariomodel';\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AutenticacaoService {\n\n    // private url = 'http://localhost:8080/login/';\n    private url = 'https://api-sistema-treinamento.herokuapp.com/login';\n\n    usuarioModelo = new Usuario();\n    public usuario = new BehaviorSubject(this.usuarioModelo);\n    usuarioLogado = this.usuario.asObservable();\n\n    constructor(private http: HttpClient, public router: Router) {\n    }\n\n    login(data): Observable<any> {\n        return this.http.post<any>(this.url, data, httpOptions).pipe(\n            tap((result) => this.save_token(result)),\n            catchError(this.handleError<any>('login'))\n        );\n    }\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n            return of(result as T);\n        };\n    }\n    private save_token(data) {\n        // if (data.success) {\n        //     localStorage.setItem('usuario', data);\n        //     return;\n        // }\n\n        if (data != null) {\n            localStorage.setItem('usuario', JSON.stringify(data));\n            this.alterarUsuario(data);\n            return;\n        }\n    }\n\n    canActivate(): boolean {\n        const token = localStorage.getItem('usuario');\n        if (token == null) {\n            this.router.navigate(['login']);\n            return false;\n        }\n        return true;\n    }\n\n    getUsuario(): any {\n        const usuario = JSON.parse(localStorage.getItem('usuario'));\n        return usuario;\n    }\n\n    encerrarSessao(): any {\n        localStorage.removeItem(\"usuario\");\n        this.alterarUsuario(new Usuario());\n        this.router.navigate(['login']);\n    }\n\n    alterarUsuario(usuarioLogado: Usuario) {\n        this.usuario.next(usuarioLogado)\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicoCursosService {\n\n  url: string = \"https://api-sistema-treinamento.herokuapp.com\";\n  // url: string = \"http://localhost:8080/\";\n\n  cabecalhoJson = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(public http: HttpClient) { }\n\n  getCursos(): Observable<any[]> {\n    return this.http.get<any[]>(this.url + \"/cursos\");\n  }\n\n  getCurso(id): Observable<any> {\n    return this.http.get<any>(this.url + \"/cursos/\"+id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from \"@angular/common/http\";\nimport { Usuario } from '../modelos/usuariomodel';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosService {\n\n  url: string = \"https://api-sistema-treinamento.herokuapp.com\";\n  // url: string = \"http://localhost:8080/\";\n  usuario: Usuario;\n\n  cabecalhoJson = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(public http: HttpClient) { }\n\n  getUsuarios(): Observable<Usuario[]> {\n    return this.http.get<Usuario[]>(this.url + \"/usuarios\");\n  }\n\n  getUsuario(id): Observable<Usuario> {\n    return this.http.get<Usuario>(this.url + \"/usuarios/\" + id);\n  }\n\n  setUsuarioSelecionado(usu: Usuario) {\n    this.usuario = usu;\n  }\n\n  getUsuarioSelecionado(): Usuario {\n    return this.usuario;\n  }\n\n  incluirUsuario(u: Usuario): Observable<any> {\n    return this.http.post(this.url + \"/usuarios\", u, this.cabecalhoJson);\n  }\n\n  atualizarUsuario(u: any) {\n    return this.http.put(this.url + \"/usuarios/\" + u._id, u, this.cabecalhoJson);\n  }\n\n  excluirUsuario(u: any) {\n    return this.http.delete(this.url + \"/usuarios/\" + u._id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariotipoService {\n\n  url: string = \"https://api-sistema-treinamento.herokuapp.com\";\n  // url: string = \"http://localhost:8080/\";\n  usuarioTipo: any;\n\n  cabecalhoJson = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(public http: HttpClient) { }\n\n  getTiposUsuario(): Observable<any[]> {\n    return this.http.get<any[]>(this.url + \"/usuariotipo\");\n  }\n\n  getTipoUsuario(id): Observable<any> {\n    return this.http.get<any>(this.url + \"/usuariotipo/\"+id);\n  }\n\n  setUsuarioSelecionado(usu: any) {\n    this.usuarioTipo = usu;\n  }\n\n  getUsuarioSelecionado(): any {\n    return this.usuarioTipo;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}