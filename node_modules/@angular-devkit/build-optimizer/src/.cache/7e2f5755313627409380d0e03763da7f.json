{"remainingRequest":"/home/raphael/ui-sistema-treinamentos/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/raphael/ui-sistema-treinamentos/node_modules/rxjs/internal/operators/race.js","dependencies":[{"path":"/home/raphael/ui-sistema-treinamentos/node_modules/rxjs/internal/operators/race.js","mtime":1561382057000},{"path":"/home/raphael/ui-sistema-treinamentos/node_modules/cache-loader/dist/cjs.js","mtime":1561382023000},{"path":"/home/raphael/ui-sistema-treinamentos/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1561381999000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\"use strict\";\n/*@__PURE__*/ Object.defineProperty(exports, \"__esModule\", { value: true });\nvar isArray_1 = /*@__PURE__*/ require(\"../util/isArray\");\nvar race_1 = /*@__PURE__*/ require(\"../observable/race\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function raceOperatorFunction(source) {\n        // if the only argument is an array, it was most likely called with\n        // `pair([obs1, obs2, ...])`\n        if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(race_1.race.apply(void 0, [source].concat(observables)));\n    };\n}\nexports.race = race;\n",null]}